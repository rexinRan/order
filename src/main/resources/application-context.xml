<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 扫描 -->
    <!--   <context:component-scan base-package="com.mall.houlide"/>-->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <!--开启数据监控-->
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <!--开启慢查询-->
        <property name="slowSqlMillis" value="10000"/>
        <property name="logSlowSql" value="true"/>
        <!--合并sql-->
        <property name="mergeSql" value="true"/>


    </bean>
    <!--配置alibaba数据源 druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--驱动-->
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="120"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->
        <!--保存DruidDataSource的监控记录-->
        <!--<property name="timeBetweenLogStatsMillis" value="300000"/>-->

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->
        <!--开启数据监控-->

        <!--<property name="useGlobalDataSourceStat" value="true"/>-->
        <!--<property name="connectionProperties" value="druid.stat.mergeSql=true"/>-->
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!--<property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>-->

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
            </list>
        </property>
    </bean>

    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Mybatis核心配置文件所在位置 -->

        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!-- 3种  第三种：接口   Mapper 扫描方式 自动 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描的包 -->
        <property name="basePackage" value="com.mall.houlide.dao"/>
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>-->
    </bean>

    <!-- 事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <tx:annotation-driven transaction-manager="transactionManager"/>


</beans>