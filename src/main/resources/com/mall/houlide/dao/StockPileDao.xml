<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mall.houlide.dao.StockPileDao">
    <resultMap id="BaseResultMap" type="com.mall.houlide.bean.StockPile">
        <id column="StockPile_ID" property="stockpileId" jdbcType="INTEGER"/>
        <result column="Dept_ID" property="deptId" jdbcType="INTEGER"/>
        <result column="StoreHouse_ID" property="storehouseId" jdbcType="INTEGER"/>
        <result column="Product_ID" property="productId" jdbcType="INTEGER"/>
        <result column="FirstEnterDate" property="firstenterdate" jdbcType="TIMESTAMP"/>
        <result column="LastLeaveDate" property="lastleavedate" jdbcType="TIMESTAMP"/>
        <result column="Quantity" property="quantity" jdbcType="INTEGER"/>
        <result column="Price" property="price" jdbcType="DOUBLE"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="BIT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            StockPile_ID, Dept_ID, StoreHouse_ID, Product_ID, FirstEnterDate, LastLeaveDate,
            Quantity, Price, remark, is_del
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mall.houlide.bean.StockPileQuery">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from stock_pile
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow != null">
            limit #{startRow} , #{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        StockPile_ID,Dept_ID,StoreHouse_ID,Product_ID,FirstEnterDate,LastLeaveDate,Quantity,Price,remark,is_del
        from stock_pile
        where StockPile_ID = #{stockpileId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from stock_pile
        where StockPile_ID = #{stockpileId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.mall.houlide.bean.StockPileQuery">
        delete from stock_pile
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mall.houlide.bean.StockPile">
        insert into stock_pile (StockPile_ID, Dept_ID, StoreHouse_ID,
        Product_ID, FirstEnterDate, LastLeaveDate,
        Quantity, Price, remark,
        is_del)
        values (#{stockpileId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{storehouseId,jdbcType=INTEGER},
        #{productId,jdbcType=INTEGER}, #{firstenterdate,jdbcType=TIMESTAMP}, #{lastleavedate,jdbcType=TIMESTAMP},
        #{quantity,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR},
        #{isDel,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.mall.houlide.bean.StockPile">
        insert into stock_pile
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stockpileId != null">
                StockPile_ID,
            </if>
            <if test="deptId != null">
                Dept_ID,
            </if>
            <if test="storehouseId != null">
                StoreHouse_ID,
            </if>
            <if test="productId != null">
                Product_ID,
            </if>
            <if test="firstenterdate != null">
                FirstEnterDate,
            </if>
            <if test="lastleavedate != null">
                LastLeaveDate,
            </if>
            <if test="quantity != null">
                Quantity,
            </if>
            <if test="price != null">
                Price,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stockpileId != null">
                #{stockpileId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="storehouseId != null">
                #{storehouseId,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="firstenterdate != null">
                #{firstenterdate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastleavedate != null">
                #{lastleavedate,jdbcType=TIMESTAMP},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mall.houlide.bean.StockPileQuery" resultType="java.lang.Integer">
        select count(*) from stock_pile
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update stock_pile
        <set>
            <if test="record.stockpileId != null">
                StockPile_ID = #{record.stockpileId,jdbcType=INTEGER},
            </if>
            <if test="record.deptId != null">
                Dept_ID = #{record.deptId,jdbcType=INTEGER},
            </if>
            <if test="record.storehouseId != null">
                StoreHouse_ID = #{record.storehouseId,jdbcType=INTEGER},
            </if>
            <if test="record.productId != null">
                Product_ID = #{record.productId,jdbcType=INTEGER},
            </if>
            <if test="record.firstenterdate != null">
                FirstEnterDate = #{record.firstenterdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastleavedate != null">
                LastLeaveDate = #{record.lastleavedate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.quantity != null">
                Quantity = #{record.quantity,jdbcType=INTEGER},
            </if>
            <if test="record.price != null">
                Price = #{record.price,jdbcType=DOUBLE},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update stock_pile
        set StockPile_ID = #{record.stockpileId,jdbcType=INTEGER},
        Dept_ID = #{record.deptId,jdbcType=INTEGER},
        StoreHouse_ID = #{record.storehouseId,jdbcType=INTEGER},
        Product_ID = #{record.productId,jdbcType=INTEGER},
        FirstEnterDate = #{record.firstenterdate,jdbcType=TIMESTAMP},
        LastLeaveDate = #{record.lastleavedate,jdbcType=TIMESTAMP},
        Quantity = #{record.quantity,jdbcType=INTEGER},
        Price = #{record.price,jdbcType=DOUBLE},
        remark = #{record.remark,jdbcType=VARCHAR},
        is_del = #{record.isDel,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mall.houlide.bean.StockPile">
        update stock_pile
        <set>
            <if test="deptId != null">
                Dept_ID = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="storehouseId != null">
                StoreHouse_ID = #{storehouseId,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                Product_ID = #{productId,jdbcType=INTEGER},
            </if>
            <if test="firstenterdate != null">
                FirstEnterDate = #{firstenterdate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastleavedate != null">
                LastLeaveDate = #{lastleavedate,jdbcType=TIMESTAMP},
            </if>
            <if test="quantity != null">
                Quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                Price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=BIT},
            </if>
        </set>
        where StockPile_ID = #{stockpileId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mall.houlide.bean.StockPile">
        update stock_pile
        set Dept_ID = #{deptId,jdbcType=INTEGER},
        StoreHouse_ID = #{storehouseId,jdbcType=INTEGER},
        Product_ID = #{productId,jdbcType=INTEGER},
        FirstEnterDate = #{firstenterdate,jdbcType=TIMESTAMP},
        LastLeaveDate = #{lastleavedate,jdbcType=TIMESTAMP},
        Quantity = #{quantity,jdbcType=INTEGER},
        Price = #{price,jdbcType=DOUBLE},
        remark = #{remark,jdbcType=VARCHAR},
        is_del = #{isDel,jdbcType=BIT}
        where StockPile_ID = #{stockpileId,jdbcType=INTEGER}
    </update>
</mapper>