<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mall.houlide.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.mall.houlide.bean.User">
        <result column="User_Id" property="userId" jdbcType="VARCHAR"/>
        <result column="User_Name" property="userName" jdbcType="VARCHAR"/>
        <result column="User_Pwd" property="userPwd" jdbcType="VARCHAR"/>
        <result column="Bel_Group" property="belGroup" jdbcType="VARCHAR"/>
        <result column="Div_Type" property="divType" jdbcType="VARCHAR"/>
        <result column="User_Auth" property="userAuth" jdbcType="VARCHAR"/>
        <result column="Auth_Type" property="authType" jdbcType="VARCHAR"/>
        <result column="User_Status" property="userStatus" jdbcType="VARCHAR"/>
        <result column="Create_User" property="createUser" jdbcType="VARCHAR"/>
        <result column="Create_Date" property="createDate" jdbcType="VARCHAR"/>
        <result column="Create_Time" property="createTime" jdbcType="VARCHAR"/>
        <result column="Appr_User" property="apprUser" jdbcType="VARCHAR"/>
        <result column="Appr_Date" property="apprDate" jdbcType="VARCHAR"/>
        <result column="Appr_Time" property="apprTime" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="BIT"/>
    </resultMap>


    <select id="selectByUserIdorUserPwd" resultMap="BaseResultMap">
        SELECT
        User_Id, User_Name, User_Pwd, Bel_Group, Div_Type, User_Auth, Auth_Type, User_Status,
        Create_User, Create_Date, Create_Time, Appr_User, Appr_Date, Appr_Time, remark, is_del
        FROM User
        WHERE User_Name = #{userName}
        <if test="userName != null and userPwd != ''">
            and USER.User_Name = #{userName}
        </if>


        <!--<where>
            <if test="userName != null">
                user_Name LIKE "%"#{userName}"%"
            </if>
            <if test="isDel != null">
                AND is_del = #{isDel}
            </if>
        </where>-->

    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            User_Id, User_Name, User_Pwd, Bel_Group, Div_Type, User_Auth, Auth_Type, User_Status,
            Create_User, Create_Date, Create_Time, Appr_User, Appr_Date, Appr_Time, remark, is_del
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mall.houlide.bean.UserQuery">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow != null">
            limit #{startRow} , #{pageSize}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.mall.houlide.bean.UserQuery">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mall.houlide.bean.User">
        insert into user (User_Id, User_Name, User_Pwd,
        Bel_Group, Div_Type, User_Auth,
        Auth_Type, User_Status, Create_User,
        Create_Date, Create_Time, Appr_User,
        Appr_Date, Appr_Time, remark,
        is_del)
        values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR},
        #{belGroup,jdbcType=VARCHAR}, #{divType,jdbcType=VARCHAR}, #{userAuth,jdbcType=VARCHAR},
        #{authType,jdbcType=VARCHAR}, #{userStatus,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR},
        #{createDate,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{apprUser,jdbcType=VARCHAR},
        #{apprDate,jdbcType=VARCHAR}, #{apprTime,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
        #{isDel,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.mall.houlide.bean.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                User_Id,
            </if>
            <if test="userName != null">
                User_Name,
            </if>
            <if test="userPwd != null">
                User_Pwd,
            </if>
            <if test="belGroup != null">
                Bel_Group,
            </if>
            <if test="divType != null">
                Div_Type,
            </if>
            <if test="userAuth != null">
                User_Auth,
            </if>
            <if test="authType != null">
                Auth_Type,
            </if>
            <if test="userStatus != null">
                User_Status,
            </if>
            <if test="createUser != null">
                Create_User,
            </if>
            <if test="createDate != null">
                Create_Date,
            </if>
            <if test="createTime != null">
                Create_Time,
            </if>
            <if test="apprUser != null">
                Appr_User,
            </if>
            <if test="apprDate != null">
                Appr_Date,
            </if>
            <if test="apprTime != null">
                Appr_Time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPwd != null">
                #{userPwd,jdbcType=VARCHAR},
            </if>
            <if test="belGroup != null">
                #{belGroup,jdbcType=VARCHAR},
            </if>
            <if test="divType != null">
                #{divType,jdbcType=VARCHAR},
            </if>
            <if test="userAuth != null">
                #{userAuth,jdbcType=VARCHAR},
            </if>
            <if test="authType != null">
                #{authType,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null">
                #{userStatus,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="apprUser != null">
                #{apprUser,jdbcType=VARCHAR},
            </if>
            <if test="apprDate != null">
                #{apprDate,jdbcType=VARCHAR},
            </if>
            <if test="apprTime != null">
                #{apprTime,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mall.houlide.bean.UserQuery" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.userId != null">
                User_Id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                User_Name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userPwd != null">
                User_Pwd = #{record.userPwd,jdbcType=VARCHAR},
            </if>
            <if test="record.belGroup != null">
                Bel_Group = #{record.belGroup,jdbcType=VARCHAR},
            </if>
            <if test="record.divType != null">
                Div_Type = #{record.divType,jdbcType=VARCHAR},
            </if>
            <if test="record.userAuth != null">
                User_Auth = #{record.userAuth,jdbcType=VARCHAR},
            </if>
            <if test="record.authType != null">
                Auth_Type = #{record.authType,jdbcType=VARCHAR},
            </if>
            <if test="record.userStatus != null">
                User_Status = #{record.userStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.createUser != null">
                Create_User = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                Create_Date = #{record.createDate,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                Create_Time = #{record.createTime,jdbcType=VARCHAR},
            </if>
            <if test="record.apprUser != null">
                Appr_User = #{record.apprUser,jdbcType=VARCHAR},
            </if>
            <if test="record.apprDate != null">
                Appr_Date = #{record.apprDate,jdbcType=VARCHAR},
            </if>
            <if test="record.apprTime != null">
                Appr_Time = #{record.apprTime,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set User_Id = #{record.userId,jdbcType=VARCHAR},
        User_Name = #{record.userName,jdbcType=VARCHAR},
        User_Pwd = #{record.userPwd,jdbcType=VARCHAR},
        Bel_Group = #{record.belGroup,jdbcType=VARCHAR},
        Div_Type = #{record.divType,jdbcType=VARCHAR},
        User_Auth = #{record.userAuth,jdbcType=VARCHAR},
        Auth_Type = #{record.authType,jdbcType=VARCHAR},
        User_Status = #{record.userStatus,jdbcType=VARCHAR},
        Create_User = #{record.createUser,jdbcType=VARCHAR},
        Create_Date = #{record.createDate,jdbcType=VARCHAR},
        Create_Time = #{record.createTime,jdbcType=VARCHAR},
        Appr_User = #{record.apprUser,jdbcType=VARCHAR},
        Appr_Date = #{record.apprDate,jdbcType=VARCHAR},
        Appr_Time = #{record.apprTime,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        is_del = #{record.isDel,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>