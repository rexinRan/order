<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mall.houlide.dao.SupplierDao">
    <resultMap id="BaseResultMap" type="com.mall.houlide.bean.Supplier">
        <id column="Supplier_ID" property="supplierId" jdbcType="INTEGER"/>
        <result column="Sup_Name" property="supName" jdbcType="VARCHAR"/>
        <result column="Address" property="address" jdbcType="VARCHAR"/>
        <result column="Phone" property="phone" jdbcType="VARCHAR"/>
        <result column="Fax" property="fax" jdbcType="VARCHAR"/>
        <result column="PostalCode" property="postalcode" jdbcType="VARCHAR"/>
        <result column="ConstactPerson" property="constactperson" jdbcType="VARCHAR"/>
        <result column="remak" property="remak" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="BIT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            Supplier_ID, Sup_Name, Address, Phone, Fax, PostalCode, ConstactPerson, remak, is_del
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mall.houlide.bean.SupplierQuery">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from supplier
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow != null">
            limit #{startRow} , #{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        Supplier_ID,Sup_Name,Address,Phone,Fax,PostalCode,ConstactPerson,remak,is_del
        from supplier
        where Supplier_ID = #{supplierId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from supplier
        where Supplier_ID = #{supplierId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.mall.houlide.bean.SupplierQuery">
        delete from supplier
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mall.houlide.bean.Supplier">
        insert into supplier (Supplier_ID, Sup_Name, Address,
        Phone, Fax, PostalCode,
        ConstactPerson, remak, is_del
        )
        values (#{supplierId,jdbcType=INTEGER}, #{supName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, #{postalcode,jdbcType=VARCHAR},
        #{constactperson,jdbcType=VARCHAR}, #{remak,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.mall.houlide.bean.Supplier">
        insert into supplier
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="supplierId != null">
                Supplier_ID,
            </if>
            <if test="supName != null">
                Sup_Name,
            </if>
            <if test="address != null">
                Address,
            </if>
            <if test="phone != null">
                Phone,
            </if>
            <if test="fax != null">
                Fax,
            </if>
            <if test="postalcode != null">
                PostalCode,
            </if>
            <if test="constactperson != null">
                ConstactPerson,
            </if>
            <if test="remak != null">
                remak,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="supplierId != null">
                #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="supName != null">
                #{supName,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="fax != null">
                #{fax,jdbcType=VARCHAR},
            </if>
            <if test="postalcode != null">
                #{postalcode,jdbcType=VARCHAR},
            </if>
            <if test="constactperson != null">
                #{constactperson,jdbcType=VARCHAR},
            </if>
            <if test="remak != null">
                #{remak,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mall.houlide.bean.SupplierQuery" resultType="java.lang.Integer">
        select count(*) from supplier
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update supplier
        <set>
            <if test="record.supplierId != null">
                Supplier_ID = #{record.supplierId,jdbcType=INTEGER},
            </if>
            <if test="record.supName != null">
                Sup_Name = #{record.supName,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                Address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                Phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.fax != null">
                Fax = #{record.fax,jdbcType=VARCHAR},
            </if>
            <if test="record.postalcode != null">
                PostalCode = #{record.postalcode,jdbcType=VARCHAR},
            </if>
            <if test="record.constactperson != null">
                ConstactPerson = #{record.constactperson,jdbcType=VARCHAR},
            </if>
            <if test="record.remak != null">
                remak = #{record.remak,jdbcType=VARCHAR},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update supplier
        set Supplier_ID = #{record.supplierId,jdbcType=INTEGER},
        Sup_Name = #{record.supName,jdbcType=VARCHAR},
        Address = #{record.address,jdbcType=VARCHAR},
        Phone = #{record.phone,jdbcType=VARCHAR},
        Fax = #{record.fax,jdbcType=VARCHAR},
        PostalCode = #{record.postalcode,jdbcType=VARCHAR},
        ConstactPerson = #{record.constactperson,jdbcType=VARCHAR},
        remak = #{record.remak,jdbcType=VARCHAR},
        is_del = #{record.isDel,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mall.houlide.bean.Supplier">
        update supplier
        <set>
            <if test="supName != null">
                Sup_Name = #{supName,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                Address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                Phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="fax != null">
                Fax = #{fax,jdbcType=VARCHAR},
            </if>
            <if test="postalcode != null">
                PostalCode = #{postalcode,jdbcType=VARCHAR},
            </if>
            <if test="constactperson != null">
                ConstactPerson = #{constactperson,jdbcType=VARCHAR},
            </if>
            <if test="remak != null">
                remak = #{remak,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=BIT},
            </if>
        </set>
        where Supplier_ID = #{supplierId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mall.houlide.bean.Supplier">
        update supplier
        set Sup_Name = #{supName,jdbcType=VARCHAR},
        Address = #{address,jdbcType=VARCHAR},
        Phone = #{phone,jdbcType=VARCHAR},
        Fax = #{fax,jdbcType=VARCHAR},
        PostalCode = #{postalcode,jdbcType=VARCHAR},
        ConstactPerson = #{constactperson,jdbcType=VARCHAR},
        remak = #{remak,jdbcType=VARCHAR},
        is_del = #{isDel,jdbcType=BIT}
        where Supplier_ID = #{supplierId,jdbcType=INTEGER}
    </update>
</mapper>