<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mall.houlide.dao.BuyOrderDao">
    <resultMap id="BaseResultMap" type="com.mall.houlide.bean.BuyOrder">
        <id column="BuyOrder_ID" property="buyorderId" jdbcType="INTEGER"/>
        <result column="WriteDate" property="writedate" jdbcType="TIMESTAMP"/>
        <result column="InsureDate" property="insuredate" jdbcType="TIMESTAMP"/>
        <result column="EndDate" property="enddate" jdbcType="TIMESTAMP"/>
        <result column="Dept_ID" property="deptId" jdbcType="INTEGER"/>
        <result column="Supplier_ID" property="supplierId" jdbcType="INTEGER"/>
        <result column="Employee_ID" property="employeeId" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="BIT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            BuyOrder_ID, WriteDate, InsureDate, EndDate, Dept_ID, Supplier_ID, Employee_ID, remark,
            is_del
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mall.houlide.bean.BuyOrderQuery">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from buy_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow != null">
            limit #{startRow} , #{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        BuyOrder_ID,WriteDate,InsureDate,EndDate,Dept_ID,Supplier_ID,Employee_ID,remark,is_del
        from buy_order
        where BuyOrder_ID = #{buyorderId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from buy_order
        where BuyOrder_ID = #{buyorderId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.mall.houlide.bean.BuyOrderQuery">
        delete from buy_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mall.houlide.bean.BuyOrder">
        insert into buy_order (BuyOrder_ID, WriteDate, InsureDate,
        EndDate, Dept_ID, Supplier_ID,
        Employee_ID, remark, is_del
        )
        values (#{buyorderId,jdbcType=INTEGER}, #{writedate,jdbcType=TIMESTAMP}, #{insuredate,jdbcType=TIMESTAMP},
        #{enddate,jdbcType=TIMESTAMP}, #{deptId,jdbcType=INTEGER}, #{supplierId,jdbcType=INTEGER},
        #{employeeId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.mall.houlide.bean.BuyOrder">
        insert into buy_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="buyorderId != null">
                BuyOrder_ID,
            </if>
            <if test="writedate != null">
                WriteDate,
            </if>
            <if test="insuredate != null">
                InsureDate,
            </if>
            <if test="enddate != null">
                EndDate,
            </if>
            <if test="deptId != null">
                Dept_ID,
            </if>
            <if test="supplierId != null">
                Supplier_ID,
            </if>
            <if test="employeeId != null">
                Employee_ID,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="buyorderId != null">
                #{buyorderId,jdbcType=INTEGER},
            </if>
            <if test="writedate != null">
                #{writedate,jdbcType=TIMESTAMP},
            </if>
            <if test="insuredate != null">
                #{insuredate,jdbcType=TIMESTAMP},
            </if>
            <if test="enddate != null">
                #{enddate,jdbcType=TIMESTAMP},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="supplierId != null">
                #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mall.houlide.bean.BuyOrderQuery" resultType="java.lang.Integer">
        select count(*) from buy_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update buy_order
        <set>
            <if test="record.buyorderId != null">
                BuyOrder_ID = #{record.buyorderId,jdbcType=INTEGER},
            </if>
            <if test="record.writedate != null">
                WriteDate = #{record.writedate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.insuredate != null">
                InsureDate = #{record.insuredate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.enddate != null">
                EndDate = #{record.enddate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deptId != null">
                Dept_ID = #{record.deptId,jdbcType=INTEGER},
            </if>
            <if test="record.supplierId != null">
                Supplier_ID = #{record.supplierId,jdbcType=INTEGER},
            </if>
            <if test="record.employeeId != null">
                Employee_ID = #{record.employeeId,jdbcType=INTEGER},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update buy_order
        set BuyOrder_ID = #{record.buyorderId,jdbcType=INTEGER},
        WriteDate = #{record.writedate,jdbcType=TIMESTAMP},
        InsureDate = #{record.insuredate,jdbcType=TIMESTAMP},
        EndDate = #{record.enddate,jdbcType=TIMESTAMP},
        Dept_ID = #{record.deptId,jdbcType=INTEGER},
        Supplier_ID = #{record.supplierId,jdbcType=INTEGER},
        Employee_ID = #{record.employeeId,jdbcType=INTEGER},
        remark = #{record.remark,jdbcType=VARCHAR},
        is_del = #{record.isDel,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mall.houlide.bean.BuyOrder">
        update buy_order
        <set>
            <if test="writedate != null">
                WriteDate = #{writedate,jdbcType=TIMESTAMP},
            </if>
            <if test="insuredate != null">
                InsureDate = #{insuredate,jdbcType=TIMESTAMP},
            </if>
            <if test="enddate != null">
                EndDate = #{enddate,jdbcType=TIMESTAMP},
            </if>
            <if test="deptId != null">
                Dept_ID = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="supplierId != null">
                Supplier_ID = #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="employeeId != null">
                Employee_ID = #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=BIT},
            </if>
        </set>
        where BuyOrder_ID = #{buyorderId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mall.houlide.bean.BuyOrder">
        update buy_order
        set WriteDate = #{writedate,jdbcType=TIMESTAMP},
        InsureDate = #{insuredate,jdbcType=TIMESTAMP},
        EndDate = #{enddate,jdbcType=TIMESTAMP},
        Dept_ID = #{deptId,jdbcType=INTEGER},
        Supplier_ID = #{supplierId,jdbcType=INTEGER},
        Employee_ID = #{employeeId,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR},
        is_del = #{isDel,jdbcType=BIT}
        where BuyOrder_ID = #{buyorderId,jdbcType=INTEGER}
    </update>
</mapper>