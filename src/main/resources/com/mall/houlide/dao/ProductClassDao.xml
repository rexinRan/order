<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mall.houlide.dao.ProductClassDao">
    <resultMap id="BaseResultMap" type="com.mall.houlide.bean.ProductClass">
        <id column="ProductClass_ID" property="productclassId" jdbcType="INTEGER"/>
        <result column="Pro_Cl_Name" property="proClName" jdbcType="VARCHAR"/>
        <result column="Employee_ID" property="employeeId" jdbcType="INTEGER"/>
        <result column="CreateDate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="Remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            ProductClass_ID, Pro_Cl_Name, Employee_ID, CreateDate, Remark
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mall.houlide.bean.ProductClassQuery">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow != null">
            limit #{startRow} , #{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        ProductClass_ID,Pro_Cl_Name,Employee_ID,CreateDate,Remark
        from product_class
        where ProductClass_ID = #{productclassId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from product_class
        where ProductClass_ID = #{productclassId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.mall.houlide.bean.ProductClassQuery">
        delete from product_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mall.houlide.bean.ProductClass">
        insert into product_class (ProductClass_ID, Pro_Cl_Name, Employee_ID,
        CreateDate, Remark)
        values (#{productclassId,jdbcType=INTEGER}, #{proClName,jdbcType=VARCHAR}, #{employeeId,jdbcType=INTEGER},
        #{createdate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.mall.houlide.bean.ProductClass">
        insert into product_class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productclassId != null">
                ProductClass_ID,
            </if>
            <if test="proClName != null">
                Pro_Cl_Name,
            </if>
            <if test="employeeId != null">
                Employee_ID,
            </if>
            <if test="createdate != null">
                CreateDate,
            </if>
            <if test="remark != null">
                Remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productclassId != null">
                #{productclassId,jdbcType=INTEGER},
            </if>
            <if test="proClName != null">
                #{proClName,jdbcType=VARCHAR},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="createdate != null">
                #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mall.houlide.bean.ProductClassQuery" resultType="java.lang.Integer">
        select count(*) from product_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product_class
        <set>
            <if test="record.productclassId != null">
                ProductClass_ID = #{record.productclassId,jdbcType=INTEGER},
            </if>
            <if test="record.proClName != null">
                Pro_Cl_Name = #{record.proClName,jdbcType=VARCHAR},
            </if>
            <if test="record.employeeId != null">
                Employee_ID = #{record.employeeId,jdbcType=INTEGER},
            </if>
            <if test="record.createdate != null">
                CreateDate = #{record.createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                Remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product_class
        set ProductClass_ID = #{record.productclassId,jdbcType=INTEGER},
        Pro_Cl_Name = #{record.proClName,jdbcType=VARCHAR},
        Employee_ID = #{record.employeeId,jdbcType=INTEGER},
        CreateDate = #{record.createdate,jdbcType=TIMESTAMP},
        Remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mall.houlide.bean.ProductClass">
        update product_class
        <set>
            <if test="proClName != null">
                Pro_Cl_Name = #{proClName,jdbcType=VARCHAR},
            </if>
            <if test="employeeId != null">
                Employee_ID = #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="createdate != null">
                CreateDate = #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                Remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where ProductClass_ID = #{productclassId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mall.houlide.bean.ProductClass">
        update product_class
        set Pro_Cl_Name = #{proClName,jdbcType=VARCHAR},
        Employee_ID = #{employeeId,jdbcType=INTEGER},
        CreateDate = #{createdate,jdbcType=TIMESTAMP},
        Remark = #{remark,jdbcType=VARCHAR}
        where ProductClass_ID = #{productclassId,jdbcType=INTEGER}
    </update>
</mapper>