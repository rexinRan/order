<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.houlide.dao.SaleDao">
  <resultMap id="BaseResultMap" type="com.mall.houlide.bean.Sale">
    <id column="Sale_ID" jdbcType="INTEGER" property="saleId" />
    <result column="SaleDate" jdbcType="TIMESTAMP" property="saledate" />
    <result column="Dept_ID" jdbcType="INTEGER" property="deptId" />
    <result column="Employee_ID" jdbcType="INTEGER" property="employeeId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="sale_state" jdbcType="VARCHAR" property="saleState" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="fields == null">
      Sale_ID, SaleDate, Dept_ID, Employee_ID, remark, sale_state, is_del
    </if>
    <if test="fields != null">
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" parameterType="com.mall.houlide.bean.SaleQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    Sale_ID,SaleDate,Dept_ID,Employee_ID,remark,sale_state,is_del
    from sale
    where Sale_ID = #{saleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sale
    where Sale_ID = #{saleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mall.houlide.bean.SaleQuery">
    delete from sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mall.houlide.bean.Sale">
    insert into sale (Sale_ID, SaleDate, Dept_ID,
    Employee_ID, remark, sale_state,
    is_del)
    values (#{saleId,jdbcType=INTEGER}, #{saledate,jdbcType=TIMESTAMP}, #{deptId,jdbcType=INTEGER},
    #{employeeId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{saleState,jdbcType=VARCHAR},
    #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.mall.houlide.bean.Sale">
    insert into sale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="saleId != null">
        Sale_ID,
      </if>
      <if test="saledate != null">
        SaleDate,
      </if>
      <if test="deptId != null">
        Dept_ID,
      </if>
      <if test="employeeId != null">
        Employee_ID,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="saleState != null">
        sale_state,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="saleId != null">
        #{saleId,jdbcType=INTEGER},
      </if>
      <if test="saledate != null">
        #{saledate,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="saleState != null">
        #{saleState,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mall.houlide.bean.SaleQuery" resultType="java.lang.Integer">
    select count(*) from sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sale
    <set>
      <if test="record.saleId != null">
        Sale_ID = #{record.saleId,jdbcType=INTEGER},
      </if>
      <if test="record.saledate != null">
        SaleDate = #{record.saledate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deptId != null">
        Dept_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null">
        Employee_ID = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.saleState != null">
        sale_state = #{record.saleState,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sale
    set Sale_ID = #{record.saleId,jdbcType=INTEGER},
    SaleDate = #{record.saledate,jdbcType=TIMESTAMP},
    Dept_ID = #{record.deptId,jdbcType=INTEGER},
    Employee_ID = #{record.employeeId,jdbcType=INTEGER},
    remark = #{record.remark,jdbcType=VARCHAR},
    sale_state = #{record.saleState,jdbcType=VARCHAR},
    is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.houlide.bean.Sale">
    update sale
    <set>
      <if test="saledate != null">
        SaleDate = #{saledate,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null">
        Dept_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        Employee_ID = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="saleState != null">
        sale_state = #{saleState,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where Sale_ID = #{saleId,jdbcType=INTEGER}
  </update>
 </mapper>